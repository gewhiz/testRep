//Given numRows, generate the first numRows of Pascal's triangle.

//For example, given numRows = 5,
//Return

//[
//     [1],
//    [1,1],
//   [1,2,1],
//  [1,3,3,1],
// [1,4,6,4,1]
//]

public class Solution {
    public List<List<Integer>> generate(int numRows) {
        int n = numRows;
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(n <=0)
            return res;
        List<Integer> init = new ArrayList<Integer>();
        init.add(1);
        res.add(init);
        if(n == 1)
        {
            return res;
        }
        int m = 1;
        while(m<n)
        {
            List<Integer> prev = res.get(m-1);
            int[] cop = new int[prev.size()];
            int t = 0;
            for(int k :  prev)
            {
                cop[t] = k;
                t++;
            }
            ArrayList<Integer> cur = new ArrayList<Integer>();
            cur.add(1);
            for(int i = 0; i< cop.length-1; i++)
            {
                cur.add(cop[i]+cop[i+1]);
            }
            cur.add(1);
            m++;
            res.add(cur);
        }
        return res;
    }
}
